#include "ws2812.h"

uint8_t WS2812_COLORBUFF[WS2812_LED_NUMBER][3];//八位色彩值缓存区，二维含义为【某一颗灯珠】【GRB】
uint8_t WS2812_SPIBUFF[WS2812_LED_NUMBER+1][3][4];//转换后的SPI模拟单总线信号【某一颗灯珠+全零reset码】【GRB数据】【转换信号数据】

//通过这个函数可以把颜色缓存区的值转换为SPI模拟单总线的信号
void WS2812_ColorBuff2SPIBuff()
{
	for(uint16_t i=0 ; i<WS2812_LED_NUMBER ; i ++)//顺序转换某一颗灯珠
	{
		for(uint8_t j=0 ; j<3 ; j++)//处理G，R，B
		{
			for(uint8_t k=0 ; k<4 ; k++)//执行4次，每次处理2个bit，转化成一个字节的信号
			{
				uint8_t data = WS2812_COLORBUFF[i][j];
				uint8_t bit2 ;
				switch(k)//提取字节内的两个bit
				{
					case 0 : bit2 = (data&0xC0)>>6 ; break ;
					case 1 : bit2 = (data&0x30)>>4 ; break ;
					case 2 : bit2 = (data&0x0C)>>2 ; break ;
					case 3 : bit2 = (data&0x03)    ; break ;
				}
				switch(bit2)//根据bit转换成对应的SPI单总线信号
				{
					case 0x00 : WS2812_SPIBUFF[i][j][k] = 0X88 ; break ;
					case 0x01 : WS2812_SPIBUFF[i][j][k] = 0X8E ; break ;
					case 0x02 : WS2812_SPIBUFF[i][j][k] = 0XE8 ; break ;
					case 0x03 : WS2812_SPIBUFF[i][j][k] = 0XEE ; break ;
				}
			}
		}
	}
}

//指定LED设定色相值：0-359度转到字节0-240
void WS2812_SETRGB(uint16_t LEDNUM , uint8_t HUE)
{
	if((LEDNUM<WS2812_LED_NUMBER)&(HUE<360))
	{
		if(HUE<120)
		{
			WS2812_COLORBUFF[LEDNUM][1] = (120-HUE)*2 ;
			WS2812_COLORBUFF[LEDNUM][0] = HUE ;
			WS2812_COLORBUFF[LEDNUM][2] = 0 ;
		}
		else if(HUE<240)
		{
			WS2812_COLORBUFF[LEDNUM][1] = 0 ;
			WS2812_COLORBUFF[LEDNUM][0] = (240-HUE)*2 ;
			WS2812_COLORBUFF[LEDNUM][2] = (HUE-120)*2 ;
		}
		else
		{
			WS2812_COLORBUFF[LEDNUM][1] = (HUE-240)*2;
			WS2812_COLORBUFF[LEDNUM][0] = 0 ;
			WS2812_COLORBUFF[LEDNUM][2] = (360-HUE)*2;
		}
	}
}

void WS2812_SHOWALL()
{
	uint8_t* p = &WS2812_SPIBUFF[0];//指向数组开头
	for(uint16_t i=0 ; i<WS2812_SPI_BUFF_Len ; i++)
	{
		LL_SPI_TransmitData8(SPI1, *p);
		while(!LL_SPI_IsEnabledIT_TXE(SPI1));
	}
}
